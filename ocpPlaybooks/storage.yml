---
- hosts: "{{ target }}"
  user: "{{ user }}"
  vars:
    config_lvm: true                                            # must be set to true in order to execute any tasks in play
    create: true                                                # set to true if creating a new logical volume
    block_device_name: "{{ blk_dvc_name | default('/dev/sdb') }}"
    new_disk: "{{ pv_name | default('/dev/sdb1') }}"            # set to new disk being added to volume group
    new_mntp: "{{ mnt_point | default('/default_mnt') }}"       # set to the desired mount point to be created and new logical volume to be mounted to
    create_vgname: "{{ vg_name | default('default-vg') }}"      # set to volume group name to create
    create_lvname: "{{ lv_name | default('default-pool') }}"    # set to logical volume name to create
    create_lvsize: "{{ lv_size | default('100%FREE') }}"        # set to logical volume size
    filesystem: "{{ fstype | default('xfs') }}"                 # set to filesystem type to format new logical volume with ( ext4, xfs, etc. )

# ansible-playbook -kv -i hosts -e "user=root" -e "target=SERVER_LIST" -e "pv_name=/dev/sdb1" -e "mnt_point=/app_home"  -e "vg_name=app-vg" -e "lv_name=app-pool" playbook.yml
# ansible-playbook -v -i ansibleInventory -e "user=ec2-user" --become --key-file "/home/ec2-user/.ssh/id_rsa" -e "target=all" -e "blk_dvc_name=/dev/nvme1n1" -e "pv_name=/dev/nvme1n1p1" -e "mnt_point=/var/lib/docker"  -e "vg_name=docker-vg" -e "lv_name=docker-pool" playbook.yml

  tasks:

    - parted:
        device: "{{ block_device_name }}"
        number: 1
        flags: [ lvm ]
        state: present
        part_start: 1MiB


    - name: "Creating new LVM volume group"
      lvg: vg={{ create_vgname }} pvs={{ new_disk }} state=present
      when: create and config_lvm


    - name: "Creating new LVM logical volume"
      lvol: vg={{ create_vgname }} lv={{ create_lvname }} size={{ create_lvsize }}
      when: create and config_lvm


    - name: "Creating new filesystem on new LVM logical volume"
      filesystem: fstype={{ filesystem }} dev=/dev/{{ create_vgname }}/{{ create_lvname }}
      when: create and config_lvm


    - name: "Mounting new filesystem"
      mount: name={{ new_mntp }} src=/dev/{{ create_vgname }}/{{ create_lvname }} fstype={{ filesystem }} state=mounted
      when: create and config_lvm


    - name: "Verify system config"
      block:
        - shell: vgs
        - shell: pvs
        - shell: lvs
