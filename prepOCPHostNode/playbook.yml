---
- hosts: "{{ target }}"
  remote_user: root
  sudo: True 
  gather_facts: True
  vars:
    config_lvm: true                                        # must be set to true in order to execute any tasks in play
    create: true                                            # set to true if creating a new logical volume
    new_disk: '/dev/nvme1n1p1'                                # set to new disk being added to volume group
    new_mntp: '/var/lib/docker'                             # set to the desired mount point to be created and new logical volume to be mounted to
    create_vgname: 'docker-vg'                              # set to volume group name to create
    create_lvname: 'docker-pool'                            # set to logical volume name to create
    create_lvsize: '75%FREE'                                # set to logical volume size to create --- (10G) - would create new lvm with 10Gigabytes -- (512) - would create new lvm with 512m
    filesystem: 'xfs'                                       # set to filesystem type to format new logical volume with ( ext4, xfs, etc. )
    subscription_poolname: 'TBC'                            # rh pool to subscribe to
    rh_password: 'TBC'
    rh_username: 'TBC'
    docker_version: 'docker-1.13.1'
    ocp_rpmrepo: ''

  tasks:

    - name: "Current OS version.."
      command: uname -a


    - name: "Check path variable.."
      command: echo $PATH


    - name: "Redhat subscription to a specific pool ID"
      redhat_subscription:
        state: present
        username: "{{ rh_username }}"
        password: "{{ rh_password }}"
        force_register: true
        pool_ids:
          - xxy


    - name: "Pull the latest subscription data from RHSM.."
      command: subscription-manager refresh
      become: true
      become_method: sudo
      become_user: root


    - name: "Disable all repositories"
      command:  yum-config-manager --disable \*


    - name: "Enable requrired OSE repositories"
      command: subscription-manager repos --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-ose-3.10-rpms" --enable="rhel-7-server-ansible-2.4-rpms"


    - name: "Install base dependencies"
      yum: state=present name="{{ item }}"
      with_items:
          - wget
          - git
          - net-tools
          - bind-utils
          - yum-utils
          - iptables-services
          - bridge-utils
          - bash-completion
          - kexec-tools
          - sos
          - psacct


    - name: "Update all packages to latest"
      yum:
        name: '*'
        state: latest


    - name: "Install all the required binaries for lvm mgmt"
      yum:
        name: 'lvm*'
        state: present


    - name: "Applicable only for rpm based installation - Pre OCPv3.10 it is atomic-openshift-utils"
      yum: state=present name="{{ item }}"
      with_items:
         - openshift-ansible
      tags:
         - rpmized

    - name: "Applicable only for containerized installation"
      yum: state=present name="{{ item }}"
      with_items:
         - atomic
      tags:
         - containerized

    - name: "Creating new LVM volume group"
      lvg: vg={{ create_vgname }} pvs={{ new_disk }} state=present
      when: create and config_lvm


    - name: "Creating new LVM logical volume"
      lvol: vg={{ create_vgname }} lv={{ create_lvname }} size={{ create_lvsize }}
      when: create and config_lvm


    - name: "Creating new filesystem on new LVM logical volume"
      filesystem: fstype={{ filesystem }} dev=/dev/{{ create_vgname }}/{{ create_lvname }}
      when: create and config_lvm


    - name: "Mounting new filesystem"
      mount: name={{ new_mntp }} src=/dev/{{ create_vgname }}/{{ create_lvname }} fstype={{ filesystem }} state=mounted
      when: create and config_lvm


    - name: "Install the latest version of Docker"
      yum:
        name: "{{ docker_version }}"
        state: present


    - name: "Docker storage set-up to use an existing volume-group"
      shell:
        cmd: |
          cat <<EOF > /etc/sysconfig/docker-storage-setup
          VG=docker-vg
          EOF


    - name: "Sys out the storage set-up values"
      command: cat /etc/sysconfig/docker-storage


    - name: "Enable and start Docker service"
      systemd:
        name: docker
        enabled: yes
        masked: no
        state: started
        daemon_reload: yes


    - name: "Stop docker service"
      systemd:
        name: docker
        state: stopped


    - name: "Remove any containes/images etc"
      command: rm -rf /var/lib/docker/*


    - name: "Restart docker service"
      systemd:
        name: docker
        state: restarted


    - name: "Verify system config"
      command: docker info


    - name: "Enable and start NetworkManager service"
      systemd:
        name: NetworkManager
        enabled: yes
        masked: no
        state: started
        daemon_reload: yes
